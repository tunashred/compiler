# for factor()
baz(3.14, "hey", x + 68);

moo(3 + foo(3 * 2));

hoo(3 * 2);

koo();


# for expr_prefix()
# -28 !32
# 69.42
# - max(x * 2, 12, moo(a))

# for expr_mul()
69.42 * min(12, 43, 655)

# for expr_add()
-3 * root(12313 * 21 / 3) + 23

# for expr_comp()
483 + 12 < 69420 - 1337

# for expr_assign()
x = 2873
x = 123 < 13
x = 93 * 231 + 21 / 21

# for expr_logic()
z && a

# for instr()
x = 93 * 231 + 21 / 21 - fact(12 * 3);
if(x == 12)
    return x;
else
    return y;
end

while(x >= 43)
    this = "block";
    if (x = 12)
        return z;
    end
    x = 12; 213 == 435; x - moo(x * 12);
end

if (x == 69 && y == 1337)
    print(nice);
end



var result:int;
result = (3 + 5) * (10 / 2) - 7;


# function with multiple var declarations
function multiVar() : int
    var a:int;
    var b:int;
    a = 10;
    b = a + 5;
    return b;
end

# multiple comparisons inside if statement
if (a > 10 && b < 20 || c == 15)
    a = b + c;
end

#complex nesting
function complexLogic(a:int, b:int) : int
    if (a > b)
        if (b > 0)
            return a;
        else
            return -a;
        end
    else
        return b;
    end
end





#
# trying to break stuff
#

i + 2 = x;


# function without if-else ended
function checkPositive(num:int) : str
    if (num > 0)
        return "positive";
    else
        return "negative";
    # Missing 'end' for the if-statement
end


#function not ended
function boo() : int
    return a;

# var declaration without type
function badVar() : int
    var x;
    x = 10;
    return x;
end

# invalid if statement
function testExpr(a:int) : int
    if (a > 10
        return a;
    end
end

# empty function block
# do i need to prohibit this?
function emptyBody() : int
end

# empty while block
var i:int;
i = 0;
while (i < 10)
end

# invalid expression
x = 5 + ;

# return statement not ending with ;
function noSemicolon() : int
    return 5
end

# bad declarations
var 123abc:int;  # Invalid identifier
var a:int; var a:int;  # Duplicate variable declaration
var d:unknownType;  # Invalid type

function add(a:int, b:int: int);  # Missing comma
function add(a:int)  # Missing return type

# ambiguous stuff
if (a > b)
    if (c < d)
        return e;
    else
    return f;

# bad argument listing
if ( (x = moo (12)) < 2)
    print(wow it works);
end







#
### to be tested and fixed cases
#
var a:int = c * foo(12);

int a = 32;
